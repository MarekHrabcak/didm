{{> component_nav moreNavLinks=navLinks}}

<div class="content">
    <div class="container">
        <form novalidate autocomplete="off" method="POST">
            <div class="form-group">
                <select id="connection" onchange="onChangeConnection">
                    <option class="custom-select custom-select-lg mb-3" disabled value="">Select a Connection</option>
                    {{#each connections}}
                    <option value="{{this.connection_id}}">{{this.their_label}}: {{this.connection_id}}</option>
                    {{/each}}
                </select>
            </div>

            <div class="form-group">
                <select id="schema" onchange="onChangeSchema">
                    <option class="custom-select custom-select-lg mb-3" disabled value="">Select a Schema</option>
                    {{#each schemas}}
                    <option value="{{this}}">{{schema}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <select id="credential-definition" onchange="onChangeCredentialDefinition">
                    <option class="custom-select custom-select-lg mb-3" disabled value="">Select a CredentialDefinition</option>
                    {{#each definitions}}
                    <option value="{{this}}">{{this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="form-group">
                <textarea id="cred-definiton" class="form-control" cols="30" rows="10" value={{defaultCredentialDefinition}}></textarea>
            </div>

            <div class="form-group">
                <button id="submit-button" class="btn btn-primary btn-lg btn-block">Send credential</button>
            </div>
        </form>
    </div>
</div>

<script>
    document.getElementById('submit-button').onclick = (ev) => {
        ev.preventDefault();
        const credential = JSON.parse(document.getElementById('credential-definition').value);
        const schemaId = document.getElementById('schema').value;
        const credentialDefinitionId = document.getElementById('credential-definition').value;

        const schemaArr = schemaId.split(':');
        credential["schema_issuer_did"] = schemaArr[0];
        credential["schema_version"] = schemaArr[3];
        credential["schema_id"] = schemaId;
        credential["schema_name"] = schemaArr[2];

        var credDefArr = credentialDefinitionId.split(":");
        credential["issuer_did"] = credDefArr[0];
        credential["cred_def_id"] = credentialDefinitionId;

        const connectionId = document.getElementById('connection').value;
        credential["connection_id"] = connectionId;


        credential["credential_proposal"]["attributes"] = JSON.parse(document.getElementById('cred-definiton'));

        fetch('/credential/send', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(credential)
        }).then(
            () => window.location = '/connections/active'
        )
    }
</script>